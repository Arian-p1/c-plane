// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.920
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "fmt"

func FaultsPage(data FaultsPageData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"space-y-6\"><!-- Page Header with Actions --><div class=\"flex justify-between items-center\"><div><h1 class=\"text-2xl font-bold text-gray-800 dark:text-dark-text\">Faults & Alarms</h1><p class=\"text-sm text-gray-600 dark:text-dark-muted mt-1\">Showing ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", len(data.Faults)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 13, Col: 51}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " of ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.TotalCount))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 13, Col: 93}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, " faults</p></div><div class=\"flex space-x-3\"><button onclick=\"refreshFaults()\" class=\"btn btn-secondary\"><i class=\"fas fa-sync-alt mr-2\"></i> Refresh</button> <button onclick=\"showBulkActions()\" class=\"btn btn-primary\"><i class=\"fas fa-tasks mr-2\"></i> Bulk Actions</button></div></div><!-- Statistics Cards --><div class=\"grid grid-cols-1 md:grid-cols-5 gap-4\"><div class=\"card p-4\"><div class=\"flex items-center justify-between\"><div><p class=\"text-sm text-gray-600 dark:text-dark-muted\">Total Faults</p><p class=\"text-2xl font-bold text-gray-800 dark:text-dark-text\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.TotalCount))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 34, Col: 44}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</p></div><i class=\"fas fa-exclamation-triangle text-gray-500 text-2xl\"></i></div></div><div class=\"card p-4\"><div class=\"flex items-center justify-between\"><div><p class=\"text-sm text-gray-600 dark:text-dark-muted\">Critical</p><p class=\"text-2xl font-bold text-red-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.SeverityStats["critical"]))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 45, Col: 59}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</p></div><i class=\"fas fa-exclamation-circle text-red-500 text-2xl\"></i></div></div><div class=\"card p-4\"><div class=\"flex items-center justify-between\"><div><p class=\"text-sm text-gray-600 dark:text-dark-muted\">Major</p><p class=\"text-2xl font-bold text-orange-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.SeverityStats["major"]))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 56, Col: 56}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</p></div><i class=\"fas fa-exclamation text-orange-500 text-2xl\"></i></div></div><div class=\"card p-4\"><div class=\"flex items-center justify-between\"><div><p class=\"text-sm text-gray-600 dark:text-dark-muted\">Minor</p><p class=\"text-2xl font-bold text-yellow-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.SeverityStats["minor"]))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 67, Col: 56}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</p></div><i class=\"fas fa-info-circle text-yellow-500 text-2xl\"></i></div></div><div class=\"card p-4\"><div class=\"flex items-center justify-between\"><div><p class=\"text-sm text-gray-600 dark:text-dark-muted\">Active</p><p class=\"text-2xl font-bold text-blue-600\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.ActiveCount))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 78, Col: 45}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</p></div><i class=\"fas fa-bell text-blue-500 text-2xl\"></i></div></div></div><!-- Filters Section --><div class=\"card p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\"><!-- Device Filter --><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Device</label> <input type=\"text\" id=\"device-filter\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var10 string
			templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.DeviceID)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 94, Col: 36}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" placeholder=\"Device ID or Serial\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></div><!-- Severity Filter --><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Severity</label> <select id=\"severity-filter\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text\"><option value=\"\">All Severities</option> <option value=\"critical\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Severity == "critical")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 104, Col: 78}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\">Critical</option> <option value=\"major\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Severity == "major")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 105, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "\">Major</option> <option value=\"minor\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 string
			templ_7745c5c3_Var13, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Severity == "minor")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 106, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var13))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "\">Minor</option> <option value=\"warning\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Severity == "warning")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 107, Col: 76}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">Warning</option> <option value=\"info\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Severity == "info")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 108, Col: 70}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "\">Info</option></select></div><!-- Status Filter --><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Status</label> <select id=\"status-filter\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text\"><option value=\"\">All Status</option> <option value=\"active\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Status == "active")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 116, Col: 72}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "\">Active</option> <option value=\"acknowledged\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var17 string
			templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Status == "acknowledged")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 117, Col: 84}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\">Acknowledged</option> <option value=\"resolved\" selected=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var18 string
			templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(data.Filters.Status == "resolved")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 118, Col: 76}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "\">Resolved</option></select></div><!-- Time Range Filter --><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Time Range</label> <select id=\"time-filter\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text\"><option value=\"\">All Time</option> <option value=\"1h\">Last Hour</option> <option value=\"24h\">Last 24 Hours</option> <option value=\"7d\">Last 7 Days</option> <option value=\"30d\">Last 30 Days</option></select></div><!-- Apply Filters --><div class=\"flex items-end\"><button onclick=\"applyFilters()\" class=\"w-full btn btn-primary\"><i class=\"fas fa-filter mr-2\"></i> Apply</button></div></div></div><!-- Faults Table --><div class=\"card overflow-hidden\"><div class=\"overflow-x-auto\"><table class=\"w-full\"><thead class=\"bg-gray-50 dark:bg-dark-bg border-b dark:border-dark-border\"><tr><th class=\"px-6 py-3 text-left\"><input type=\"checkbox\" id=\"select-all\" class=\"rounded border-gray-300 dark:border-dark-border\"></th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Severity</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Device</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Code & Message</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Status</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Time</th><th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-dark-muted uppercase tracking-wider\">Actions</th></tr></thead> <tbody class=\"divide-y divide-gray-200 dark:divide-dark-border\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, fault := range data.Faults {
				templ_7745c5c3_Err = FaultRow(fault).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</tbody></table></div><!-- Empty State -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(data.Faults) == 0 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "<div class=\"text-center py-12\"><i class=\"fas fa-check-circle text-green-400 text-5xl mb-4\"></i><p class=\"text-gray-500 dark:text-dark-muted\">No faults found</p><p class=\"text-sm text-gray-400 dark:text-dark-muted mt-1\">All systems are running normally</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "</div><!-- Pagination -->")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if data.TotalPages > 1 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<div class=\"flex items-center justify-between\"><div class=\"flex items-center space-x-2\"><span class=\"text-sm text-gray-700 dark:text-dark-text\">Page ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var19 string
				templ_7745c5c3_Var19, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.CurrentPage))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 191, Col: 49}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var19))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, " of ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var20 string
				templ_7745c5c3_Var20, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", data.TotalPages))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 191, Col: 91}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var20))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "</span></div><div class=\"flex space-x-1\"><!-- Previous -->")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("goToPage", data.CurrentPage-1))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "<button onclick=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var21 templ.ComponentScript = templ.JSFuncCall("goToPage", data.CurrentPage-1)
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var21.Call)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "\" disabled=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var22 string
				templ_7745c5c3_Var22, templ_7745c5c3_Err = templ.JoinStringErrs(data.CurrentPage == 1)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 198, Col: 39}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var22))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "\" class=\"px-3 py-2 rounded-lg border border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-bg disabled:opacity-50 disabled:cursor-not-allowed\"><i class=\"fas fa-chevron-left\"></i></button><!-- Page Numbers -->")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for i := 1; i <= data.TotalPages; i++ {
					if i == data.CurrentPage {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 27, "<button class=\"px-3 py-2 rounded-lg bg-accent text-white\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var23 string
						templ_7745c5c3_Var23, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", i))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 207, Col: 31}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var23))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 28, "</button>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else if i == 1 || i == data.TotalPages || (i >= data.CurrentPage-2 && i <= data.CurrentPage+2) {
						templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("goToPage", i))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 29, "<button onclick=\"")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var24 templ.ComponentScript = templ.JSFuncCall("goToPage", i)
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var24.Call)
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 30, "\" class=\"px-3 py-2 rounded-lg border border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-bg\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var25 string
						templ_7745c5c3_Var25, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", i))
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 214, Col: 31}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var25))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 31, "</button>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else if i == data.CurrentPage-3 || i == data.CurrentPage+3 {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 32, "<span class=\"px-2\">...</span>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 33, "<!-- Next -->")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("goToPage", data.CurrentPage+1))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 34, "<button onclick=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var26 templ.ComponentScript = templ.JSFuncCall("goToPage", data.CurrentPage+1)
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var26.Call)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 35, "\" disabled=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var27 string
				templ_7745c5c3_Var27, templ_7745c5c3_Err = templ.JoinStringErrs(data.CurrentPage == data.TotalPages)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 223, Col: 53}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var27))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 36, "\" class=\"px-3 py-2 rounded-lg border border-gray-300 dark:border-dark-border hover:bg-gray-50 dark:hover:bg-dark-bg disabled:opacity-50 disabled:cursor-not-allowed\"><i class=\"fas fa-chevron-right\"></i></button></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 37, "</div><!-- Fault Detail Modal --> <div id=\"fault-detail-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white dark:bg-dark-surface rounded-lg p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\"><div class=\"flex justify-between items-start mb-4\"><h3 class=\"text-lg font-semibold text-gray-800 dark:text-dark-text\">Fault Details</h3><button onclick=\"closeFaultDetail()\" class=\"text-gray-400 hover:text-gray-600\"><i class=\"fas fa-times\"></i></button></div><div id=\"fault-detail-content\"><!-- Content will be populated dynamically --></div></div></div><!-- Acknowledge Modal --> <div id=\"acknowledge-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white dark:bg-dark-surface rounded-lg p-6 max-w-md w-full\"><h3 class=\"text-lg font-semibold mb-4 text-gray-800 dark:text-dark-text\">Acknowledge Fault</h3><form id=\"acknowledge-form\" class=\"space-y-4\"><input type=\"hidden\" id=\"acknowledge-fault-id\"><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Acknowledged By</label> <input type=\"text\" id=\"acknowledged-by\" required placeholder=\"Your name\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></div><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Notes (Optional)</label> <textarea id=\"acknowledge-notes\" rows=\"3\" placeholder=\"Additional notes about the acknowledgment\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></textarea></div><div class=\"flex justify-end space-x-3\"><button type=\"button\" onclick=\"closeAcknowledgeModal()\" class=\"btn btn-secondary\">Cancel</button> <button type=\"submit\" class=\"btn btn-warning\"><i class=\"fas fa-check mr-2\"></i> Acknowledge</button></div></form></div></div><!-- Resolve Modal --> <div id=\"resolve-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white dark:bg-dark-surface rounded-lg p-6 max-w-md w-full\"><h3 class=\"text-lg font-semibold mb-4 text-gray-800 dark:text-dark-text\">Resolve Fault</h3><form id=\"resolve-form\" class=\"space-y-4\"><input type=\"hidden\" id=\"resolve-fault-id\"><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Resolved By</label> <input type=\"text\" id=\"resolved-by\" required placeholder=\"Your name\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></div><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Resolution</label> <textarea id=\"resolution\" rows=\"3\" required placeholder=\"Describe how the fault was resolved\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></textarea></div><div><label class=\"block text-sm font-medium text-gray-700 dark:text-dark-text mb-1\">Notes (Optional)</label> <textarea id=\"resolve-notes\" rows=\"2\" placeholder=\"Additional notes\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-lg bg-white dark:bg-dark-bg text-gray-900 dark:text-dark-text focus:ring-2 focus:ring-accent\"></textarea></div><div class=\"flex justify-end space-x-3\"><button type=\"button\" onclick=\"closeResolveModal()\" class=\"btn btn-secondary\">Cancel</button> <button type=\"submit\" class=\"btn btn-success\"><i class=\"fas fa-check-circle mr-2\"></i> Resolve</button></div></form></div></div><!-- Bulk Actions Modal --> <div id=\"bulk-actions-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"><div class=\"bg-white dark:bg-dark-surface rounded-lg p-6 max-w-md w-full\"><h3 class=\"text-lg font-semibold mb-4 text-gray-800 dark:text-dark-text\">Bulk Actions</h3><p class=\"text-sm text-gray-600 dark:text-dark-muted mb-4\"><span id=\"selected-count\">0</span> faults selected</p><div class=\"space-y-3\"><button onclick=\"bulkAcknowledge()\" class=\"w-full btn btn-warning\"><i class=\"fas fa-check mr-2\"></i> Acknowledge Selected</button> <button onclick=\"bulkResolve()\" class=\"w-full btn btn-success\"><i class=\"fas fa-check-circle mr-2\"></i> Resolve Selected</button> <button onclick=\"bulkExport()\" class=\"w-full btn btn-secondary\"><i class=\"fas fa-download mr-2\"></i> Export Selected</button></div><div class=\"mt-6 flex space-x-3\"><button onclick=\"closeBulkActions()\" class=\"flex-1 btn btn-secondary\">Cancel</button></div></div></div><script>\n\t\t\tlet selectedFaults = new Set();\n\n\t\t\tfunction applyFilters() {\n\t\t\t\tconst params = new URLSearchParams();\n\n\t\t\t\tconst device = document.getElementById('device-filter').value;\n\t\t\t\tif (device) params.set('deviceId', device);\n\n\t\t\t\tconst severity = document.getElementById('severity-filter').value;\n\t\t\t\tif (severity) params.set('severity', severity);\n\n\t\t\t\tconst status = document.getElementById('status-filter').value;\n\t\t\t\tif (status) params.set('status', status);\n\n\t\t\t\tconst timeRange = document.getElementById('time-filter').value;\n\t\t\t\tif (timeRange) params.set('timeRange', timeRange);\n\n\t\t\t\twindow.location.href = '/faults?' + params.toString();\n\t\t\t}\n\n\t\t\tfunction goToPage(page) {\n\t\t\t\tconst url = new URL(window.location);\n\t\t\t\turl.searchParams.set('page', page);\n\t\t\t\twindow.location.href = url.toString();\n\t\t\t}\n\n\t\t\tfunction toggleFault(faultId) {\n\t\t\t\tif (selectedFaults.has(faultId)) {\n\t\t\t\t\tselectedFaults.delete(faultId);\n\t\t\t\t} else {\n\t\t\t\t\tselectedFaults.add(faultId);\n\t\t\t\t}\n\t\t\t\tupdateSelectedCount();\n\t\t\t}\n\n\t\t\tfunction selectAll() {\n\t\t\t\tconst selectAll = document.getElementById('select-all');\n\t\t\t\tconst checkboxes = document.querySelectorAll('input[name=\"fault-select\"]');\n\n\t\t\t\tcheckboxes.forEach(cb => {\n\t\t\t\t\tcb.checked = selectAll.checked;\n\t\t\t\t\tif (selectAll.checked) {\n\t\t\t\t\t\tselectedFaults.add(cb.value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselectedFaults.delete(cb.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tupdateSelectedCount();\n\t\t\t}\n\n\t\t\tfunction updateSelectedCount() {\n\t\t\t\tdocument.getElementById('selected-count').textContent = selectedFaults.size;\n\t\t\t}\n\n\t\t\tfunction showFaultDetail(faultId) {\n\t\t\t\tfetch(`/api/faults/${faultId}`)\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tdocument.getElementById('fault-detail-content').innerHTML = renderFaultDetail(data);\n\t\t\t\t\t\tdocument.getElementById('fault-detail-modal').classList.remove('hidden');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tshowNotification('error', 'Failed to load fault details');\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction showAcknowledgeModal(faultId) {\n\t\t\t\tdocument.getElementById('acknowledge-fault-id').value = faultId;\n\t\t\t\tdocument.getElementById('acknowledge-modal').classList.remove('hidden');\n\t\t\t}\n\n\t\t\tfunction showResolveModal(faultId) {\n\t\t\t\tdocument.getElementById('resolve-fault-id').value = faultId;\n\t\t\t\tdocument.getElementById('resolve-modal').classList.remove('hidden');\n\t\t\t}\n\n\t\t\tfunction showBulkActions() {\n\t\t\t\tif (selectedFaults.size === 0) {\n\t\t\t\t\talert('Please select at least one fault');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdocument.getElementById('bulk-actions-modal').classList.remove('hidden');\n\t\t\t}\n\n\t\t\tfunction closeFaultDetail() {\n\t\t\t\tdocument.getElementById('fault-detail-modal').classList.add('hidden');\n\t\t\t}\n\n\t\t\tfunction closeAcknowledgeModal() {\n\t\t\t\tdocument.getElementById('acknowledge-modal').classList.add('hidden');\n\t\t\t}\n\n\t\t\tfunction closeResolveModal() {\n\t\t\t\tdocument.getElementById('resolve-modal').classList.add('hidden');\n\t\t\t}\n\n\t\t\tfunction closeBulkActions() {\n\t\t\t\tdocument.getElementById('bulk-actions-modal').classList.add('hidden');\n\t\t\t}\n\n\t\t\tfunction refreshFaults() {\n\t\t\t\tlocation.reload();\n\t\t\t}\n\n\t\t\tfunction showNotification(type, message) {\n\t\t\t\t// Implement notification display\n\t\t\t\talert(`${type}: ${message}`);\n\t\t\t}\n\n\t\t\t// Form handlers\n\t\t\tdocument.getElementById('acknowledge-form').addEventListener('submit', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst faultId = document.getElementById('acknowledge-fault-id').value;\n\t\t\t\tconst acknowledgedBy = document.getElementById('acknowledged-by').value;\n\t\t\t\tconst notes = document.getElementById('acknowledge-notes').value;\n\n\t\t\t\tfetch(`/api/faults/${faultId}/acknowledge`, {\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({ acknowledgedBy, notes })\n\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\tshowNotification('success', 'Fault acknowledged successfully');\n\t\t\t\t\t\t\tcloseAcknowledgeModal();\n\t\t\t\t\t\t\tsetTimeout(() => location.reload(), 1000);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowNotification('error', data.error || 'Failed to acknowledge fault');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tdocument.getElementById('resolve-form').addEventListener('submit', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst faultId = document.getElementById('resolve-fault-id').value;\n\t\t\t\tconst resolvedBy = document.getElementById('resolved-by').value;\n\t\t\t\tconst resolution = document.getElementById('resolution').value;\n\t\t\t\tconst notes = document.getElementById('resolve-notes').value;\n\n\t\t\t\tfetch(`/api/faults/${faultId}/resolve`, {\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({ resolvedBy, resolution, notes })\n\t\t\t\t})\n\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data.success) {\n\t\t\t\t\t\t\tshowNotification('success', 'Fault resolved successfully');\n\t\t\t\t\t\t\tcloseResolveModal();\n\t\t\t\t\t\t\tsetTimeout(() => location.reload(), 1000);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowNotification('error', data.error || 'Failed to resolve fault');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Initialize select all checkbox\n\t\t\tdocument.getElementById('select-all').addEventListener('change', selectAll);\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Page(data.Title, data.Theme, data.CurrentPath).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func FaultRow(fault *FaultDisplay) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var28 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var28 == nil {
			templ_7745c5c3_Var28 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 38, "<tr class=\"hover:bg-gray-50 dark:hover:bg-dark-bg transition-colors\"><td class=\"px-6 py-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("toggleFault", fault.ID))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 39, "<input type=\"checkbox\" name=\"fault-select\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var29 string
		templ_7745c5c3_Var29, templ_7745c5c3_Err = templ.JoinStringErrs(fault.ID)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 527, Col: 20}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var29))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 40, "\" onchange=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var30 templ.ComponentScript = templ.JSFuncCall("toggleFault", fault.ID)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var30.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 41, "\" class=\"rounded border-gray-300 dark:border-dark-border\"></td><td class=\"px-6 py-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SeverityBadge(fault.Severity).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 42, "</td><td class=\"px-6 py-4\"><div><p class=\"font-medium text-gray-900 dark:text-dark-text\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var31 string
		templ_7745c5c3_Var31, templ_7745c5c3_Err = templ.JoinStringErrs(fault.DeviceName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 538, Col: 23}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var31))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 43, "</p><p class=\"text-sm text-gray-500 dark:text-dark-muted\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var32 string
		templ_7745c5c3_Var32, templ_7745c5c3_Err = templ.JoinStringErrs(fault.DeviceSerial)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 541, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var32))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 44, "</p></div></td><td class=\"px-6 py-4\"><div><p class=\"font-medium text-gray-900 dark:text-dark-text\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var33 string
		templ_7745c5c3_Var33, templ_7745c5c3_Err = templ.JoinStringErrs(fault.Code)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 548, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var33))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 45, "</p><p class=\"text-sm text-gray-600 dark:text-dark-muted\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var34 string
		templ_7745c5c3_Var34, templ_7745c5c3_Err = templ.JoinStringErrs(fault.Message)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 551, Col: 20}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var34))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 46, "</p></div></td><td class=\"px-6 py-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = StatusBadge(fault.Status).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 47, "</td><td class=\"px-6 py-4\"><span class=\"text-sm text-gray-600 dark:text-dark-muted\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var35 string
		templ_7745c5c3_Var35, templ_7745c5c3_Err = templ.JoinStringErrs(fault.TimeAgoText)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `faults.templ`, Line: 560, Col: 23}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var35))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 48, "</span></td><td class=\"px-6 py-4\"><div class=\"flex items-center space-x-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("showFaultDetail", fault.ID))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 49, "<button onclick=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var36 templ.ComponentScript = templ.JSFuncCall("showFaultDetail", fault.ID)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var36.Call)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 50, "\" class=\"p-1 hover:bg-gray-100 dark:hover:bg-dark-bg rounded transition-colors\" title=\"View Details\"><i class=\"fas fa-eye text-gray-600 dark:text-dark-muted\"></i></button> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if fault.CanAcknowledge {
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("showAcknowledgeModal", fault.ID))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 51, "<button onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var37 templ.ComponentScript = templ.JSFuncCall("showAcknowledgeModal", fault.ID)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var37.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 52, "\" class=\"p-1 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 rounded transition-colors\" title=\"Acknowledge\"><i class=\"fas fa-check text-yellow-600\"></i></button> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if fault.CanResolve {
			templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("showResolveModal", fault.ID))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 53, "<button onclick=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var38 templ.ComponentScript = templ.JSFuncCall("showResolveModal", fault.ID)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var38.Call)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 54, "\" class=\"p-1 hover:bg-green-50 dark:hover:bg-green-900/20 rounded transition-colors\" title=\"Resolve\"><i class=\"fas fa-check-circle text-green-600\"></i></button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 55, "</div></td></tr>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func SeverityBadge(severity string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var39 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var39 == nil {
			templ_7745c5c3_Var39 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		switch severity {
		case "critical":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 56, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\"><i class=\"fas fa-exclamation-circle mr-1\"></i> Critical</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "major":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 57, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400\"><i class=\"fas fa-exclamation-triangle mr-1\"></i> Major</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "minor":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 58, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400\"><i class=\"fas fa-exclamation mr-1\"></i> Minor</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "warning":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 59, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400\"><i class=\"fas fa-exclamation-triangle mr-1\"></i> Warning</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "info":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 60, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400\"><i class=\"fas fa-info-circle mr-1\"></i> Info</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		default:
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 61, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400\"><i class=\"fas fa-question mr-1\"></i> Unknown</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

func StatusBadge(status string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var40 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var40 == nil {
			templ_7745c5c3_Var40 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		switch status {
		case "active":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 62, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\"><i class=\"fas fa-exclamation-circle mr-1\"></i> Active</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "acknowledged":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 63, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400\"><i class=\"fas fa-check mr-1\"></i> Acknowledged</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		case "resolved":
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 64, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\"><i class=\"fas fa-check-circle mr-1\"></i> Resolved</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		default:
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 65, "<span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400\"><i class=\"fas fa-question mr-1\"></i> Unknown</span>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
